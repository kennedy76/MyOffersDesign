{\rtf1\ansi\ansicpg1252\deff0\deflang16393{\fonttbl{\f0\fnil Courier New;}{\f1\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue128;\red0\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red102\green14\blue122;\red0\green0\blue255;\red0\green128\blue0;\red255\green255\blue255;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\box\brdrdash\brdrw0 \cbpat8\sa200\sl276\slmult1\cf1\lang9\b\f0\fs18 package \cf2\b0 com.example.happy.gmailsignin;\line\line\cf1\b import \cf2\b0 android.content.Intent;\line\cf1\b import \cf2\b0 android.support.annotation.\cf3 NonNull\cf2 ;\line\cf1\b import \cf2\b0 android.support.v7.app.AppCompatActivity;\line\cf1\b import \cf2\b0 android.os.Bundle;\line\cf1\b import \cf2\b0 android.util.Log;\line\cf1\b import \cf2\b0 android.view.View;\line\cf1\b import \cf2\b0 android.widget.Button;\line\cf1\b import \cf2\b0 android.widget.ImageView;\line\cf1\b import \cf2\b0 android.widget.LinearLayout;\line\cf1\b import \cf2\b0 android.widget.TextView;\line\line\cf1\b import \cf2\b0 com.bumptech.glide.Glide;\line\cf1\b import \cf2\b0 com.google.android.gms.auth.api.Auth;\line\cf1\b import \cf2\b0 com.google.android.gms.auth.api.signin.GoogleSignInAccount;\line\cf1\b import \cf2\b0 com.google.android.gms.auth.api.signin.GoogleSignInApi;\line\cf1\b import \cf2\b0 com.google.android.gms.auth.api.signin.GoogleSignInOptions;\line\cf1\b import \cf2\b0 com.google.android.gms.auth.api.signin.GoogleSignInResult;\line\cf1\b import \cf2\b0 com.google.android.gms.auth.api.signin.SignInAccount;\line\cf1\b import \cf2\b0 com.google.android.gms.common.ConnectionResult;\line\cf1\b import \cf2\b0 com.google.android.gms.common.SignInButton;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.GoogleApiClient;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.ResolvingResultCallbacks;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.ResultCallback;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.ResultCallbacks;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.Status;\line\cf1\b import \cf2\b0 android.content.Intent;\line\cf1\b import \cf2\b0 android.content.IntentSender.SendIntentException;\line\cf1\b import \cf2\b0 android.graphics.Bitmap;\line\cf1\b import \cf2\b0 android.graphics.BitmapFactory;\line\cf1\b import \cf2\b0 android.os.AsyncTask;\line\cf1\b import \cf2\b0 android.os.Bundle;\line\cf1\b import \cf2\b0 android.support.v7.app.AppCompatActivity;\line\cf1\b import \cf2\b0 android.support.v7.widget.Toolbar;\line\cf1\b import \cf2\b0 android.util.Log;\line\cf1\b import \cf2\b0 android.view.Menu;\line\cf1\b import \cf2\b0 android.view.View;\line\cf1\b import \cf2\b0 android.view.View.OnClickListener;\line\cf1\b import \cf2\b0 android.widget.Button;\line\cf1\b import \cf2\b0 android.widget.ImageView;\line\cf1\b import \cf2\b0 android.widget.LinearLayout;\line\cf1\b import \cf2\b0 android.widget.TextView;\line\cf1\b import \cf2\b0 android.widget.Toast;\line\line\cf1\b import \cf2\b0 com.google.android.gms.common.ConnectionResult;\line\cf1\b import \cf2\b0 com.google.android.gms.common.GooglePlayServicesUtil;\line\cf1\b import \cf2\b0 com.google.android.gms.common.SignInButton;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.GoogleApiClient;\line\cf1\b import \cf2\b0 com.google.android.gms.common.api.GoogleApiClient.OnConnectionFailedListener;\line\cf1\b import \cf2\b0 com.google.android.gms.plus.Plus;\line\cf1\b import \cf2\b0 com.google.android.gms.plus.model.people.Person;\line\line\cf1\b import \cf2\b0 java.io.InputStream;\line\cf1\b public class \cf2\b0 MainActivity \cf1\b extends \cf2\b0 AppCompatActivity \cf1\b implements \cf2\b0 OnClickListener,\line         GoogleApiClient.ConnectionCallbacks, OnConnectionFailedListener \{\line\line     \cf4\i // Profile pic image size in pixels\line     \cf1\b\i0 private static final int \cf5\i PROFILE_PIC_SIZE \cf2\b0\i0 = \cf6 400\cf2 ;\line\line     \cf4\i /* Request code used to invoke sign in user interactions. */\line     \cf1\b\i0 private static final int \cf5\i RC_SIGN_IN \cf2\b0\i0 = \cf6 0\cf2 ;\line\line     \cf4\i /* Client used to interact with Google APIs. */\line     \cf1\b\i0 private \cf2\b0 GoogleApiClient \cf5\b mGoogleApiClient\cf2\b0 ;\line\line     \cf4\i /* A flag indicating that a PendingIntent is in progress and prevents\line     * us from starting further intents.\line     */\line     \cf1\b\i0 private boolean \cf5 mIntentInProgress\cf2\b0 ;\line\line     \cf1\b private boolean \cf5 mShouldResolve\cf2\b0 ;\line\line     \cf1\b private \cf2\b0 ConnectionResult \cf5\b connectionResult\cf2\b0 ;\line\line     \cf1\b private \cf2\b0 SignInButton \cf5\b signInButton\cf2\b0 ;\line     \cf1\b private \cf2\b0 Button \cf5\b signOutButton\cf2\b0 ;\line     \cf1\b private \cf2\b0 TextView \cf5\b tvName\cf2\b0 , \cf5\b tvMail\cf2\b0 , \cf5\b tvNotSignedIn\cf2\b0 ;\line     \cf1\b private \cf2\b0 ImageView \cf5\b imgProfilePic\cf2\b0 ;\line     \cf1\b private \cf2\b0 LinearLayout \cf5\b viewContainer\cf2\b0 ;\line\line     \cf3 @Override\line     \cf1\b protected void \cf2\b0 onCreate(Bundle savedInstanceState) \{\line         \cf1\b super\cf2\b0 .onCreate(savedInstanceState);\line         setContentView(R.layout.\cf5\b\i activity_main\cf2\b0\i0 );\line\line         \cf5\b imgProfilePic \cf2\b0 = (ImageView) findViewById(R.id.\cf5\b\i imgProfilePic\cf2\b0\i0 );\line         \cf5\b signInButton \cf2\b0 = (SignInButton) findViewById(R.id.\cf5\b\i sign_in_button\cf2\b0\i0 );\line         \cf5\b signOutButton \cf2\b0 = (Button) findViewById(R.id.\cf5\b\i sign_out_button\cf2\b0\i0 );\line         \cf5\b tvName \cf2\b0 = (TextView) findViewById(R.id.\cf5\b\i tvName\cf2\b0\i0 );\line         \cf5\b tvMail \cf2\b0 = (TextView) findViewById(R.id.\cf5\b\i tvMail\cf2\b0\i0 );\line         \cf5\b tvNotSignedIn \cf2\b0 = (TextView) findViewById(R.id.\cf5\b\i notSignedIn_tv\cf2\b0\i0 );\line         \cf5\b viewContainer \cf2\b0 = (LinearLayout) findViewById(R.id.\cf5\b\i text_view_container\cf2\b0\i0 );\line\line\line\line         \cf5\b signInButton\cf2\b0 .setOnClickListener(\cf1\b this\cf2\b0 );\line         \cf5\b signOutButton\cf2\b0 .setOnClickListener(\cf1\b this\cf2\b0 );\line\line         \cf5\b mGoogleApiClient \cf2\b0 = \cf1\b new \cf2\b0 GoogleApiClient.Builder(\cf1\b this\cf2\b0 )\line                 .addConnectionCallbacks(\cf1\b this\cf2\b0 )\line                 .addOnConnectionFailedListener(\cf1\b this\cf2\b0 )\line                 .addApi(Plus.\cf5\b\i API\cf2\b0\i0 )\line                 .addScope(Plus.\cf5\b\i SCOPE_PLUS_LOGIN\cf2\b0\i0 )\line                 .build();\line\line     \}\line\line     \cf1\b protected void \cf2\b0 onStart() \{\line         \cf1\b super\cf2\b0 .onStart();\line         \cf5\b mGoogleApiClient\cf2\b0 .connect();\line     \}\line\line     \cf1\b protected void \cf2\b0 onStop() \{\line         \cf1\b super\cf2\b0 .onStop();\line         \cf1\b if \cf2\b0 (\cf5\b mGoogleApiClient\cf2\b0 .isConnected()) \{\line             \cf5\b mGoogleApiClient\cf2\b0 .disconnect();\line         \}\line     \}\line\line\line     \cf1\b private void \cf2\b0 resolveSignInError() \{\line         \cf1\b if \cf2\b0 (\cf5\b connectionResult\cf2\b0 .hasResolution()) \{\line             \cf1\b try \cf2\b0\{\line                 \cf5\b mIntentInProgress \cf2\b0 = \cf1\b true\cf2\b0 ;\line                 \cf5\b connectionResult\cf2\b0 .startResolutionForResult(\cf1\b this\cf2\b0 , \cf5\b\i RC_SIGN_IN\cf2\b0\i0 );\line             \} \cf1\b catch \cf2\b0 (SendIntentException e) \{\line                 \cf5\b mIntentInProgress \cf2\b0 = \cf1\b false\cf2\b0 ;\line                 \cf5\b mGoogleApiClient\cf2\b0 .connect();\line             \}\line         \}\line     \}\line\line     \cf4\i /*\line     When the GoogleApiClient object is unable to establish a connection onConnectionFailed() is called\line      */\line     \cf3\i0 @Override\line     \cf1\b public void \cf2\b0 onConnectionFailed(ConnectionResult result) \{\line         \cf1\b if \cf2\b0 (!result.hasResolution()) \{\line             GooglePlayServicesUtil.\i getErrorDialog\i0 (result.getErrorCode(), \cf1\b this\cf2\b0 ,\line                     \cf6 0\cf2 ).show();\line             \cf1\b return\cf2\b0 ;\line         \}\line\line         \cf1\b if \cf2\b0 (!\cf5\b mIntentInProgress\cf2\b0 ) \{\line\line             \cf5\b connectionResult \cf2\b0 = result;\line\line             \cf1\b if \cf2\b0 (\cf5\b mShouldResolve\cf2\b0 ) \{\line\line                 resolveSignInError();\line             \}\line         \}\line\line     \}\line\line     \cf4\i /*\line     onConnectionFailed() was started with startIntentSenderForResult and the code RC_SIGN_IN,\line     we can capture the result inside Activity.onActivityResult.\line      */\line     \cf3\i0 @Override\line     \cf1\b protected void \cf2\b0 onActivityResult(\cf1\b int \cf2\b0 requestCode, \cf1\b int \cf2\b0 responseCode,\line                                     Intent intent) \{\line         \cf1\b if \cf2\b0 (requestCode == \cf5\b\i RC_SIGN_IN\cf2\b0\i0 ) \{\line             \cf1\b if \cf2\b0 (responseCode != \cf5\b\i RESULT_OK\cf2\b0\i0 ) \{\line                 \cf5\b mShouldResolve \cf2\b0 = \cf1\b false\cf2\b0 ;\line             \}\line\line             \cf5\b mIntentInProgress \cf2\b0 = \cf1\b false\cf2\b0 ;\line\line             \cf1\b if \cf2\b0 (!\cf5\b mGoogleApiClient\cf2\b0 .isConnecting()) \{\line                 \cf5\b mGoogleApiClient\cf2\b0 .connect();\line             \}\line         \}\line     \}\line\line     \cf3 @Override\line     \cf1\b public void \cf2\b0 onConnected(Bundle arg0) \{\line         \cf5\b mShouldResolve \cf2\b0 = \cf1\b false\cf2\b0 ;\line         \cf1\b try \cf2\b0\{\line             \cf1\b if \cf2\b0 (Plus.\cf5\b\i PeopleApi\cf2\b0\i0 .getCurrentPerson(\cf5\b mGoogleApiClient\cf2\b0 ) != \cf1\b null\cf2\b0 ) \{\line                 Person person = Plus.\cf5\b\i PeopleApi\line                         \cf2\b0\i0 .getCurrentPerson(\cf5\b mGoogleApiClient\cf2\b0 );\line                 String personName = person.getDisplayName();\line                 String personPhotoUrl = person.getImage().getUrl();\line                 String email = Plus.\cf5\b\i AccountApi\cf2\b0\i0 .getAccountName(\cf5\b mGoogleApiClient\cf2\b0 );\line\line                 \cf5\b tvName\cf2\b0 .setText(personName);\line                 \cf5\b tvMail\cf2\b0 .setText(email);\line\line                 personPhotoUrl = personPhotoUrl.substring(\cf6 0\cf2 ,\line                         personPhotoUrl.length() - \cf6 2\cf2 )\line                         + \cf5\b\i PROFILE_PIC_SIZE\cf2\b0\i0 ;\line\line                 \cf1\b new \cf2\b0 LoadProfileImage(\cf5\b imgProfilePic\cf2\b0 ).execute(personPhotoUrl);\line\line                 Toast.\i makeText\i0 (getApplicationContext(),\line                         \cf7\b "You are Logged In " \cf2\b0 + personName,             Toast.\cf5\b\i LENGTH_LONG\cf2\b0\i0 ).show();\line             \} \cf1\b else \cf2\b0\{\line                 Toast.\i makeText\i0 (getApplicationContext(),\line                         \cf7\b "Couldnt Get the Person Info"\cf2\b0 , Toast.\cf5\b\i LENGTH_SHORT\cf2\b0\i0 ).show();\line             \}\line         \} \cf1\b catch \cf2\b0 (Exception e) \{\line             e.printStackTrace();\line         \}\line         signOutUI();\line\line     \}\line\line     \cf1\b private void \cf2\b0 signOutUI() \{\line         \cf5\b signInButton\cf2\b0 .setVisibility(View.\cf5\b\i GONE\cf2\b0\i0 );\line         \cf5\b tvNotSignedIn\cf2\b0 .setVisibility(View.\cf5\b\i GONE\cf2\b0\i0 );\line         \cf5\b signOutButton\cf2\b0 .setVisibility(View.\cf5\b\i VISIBLE\cf2\b0\i0 );\line         \cf5\b viewContainer\cf2\b0 .setVisibility(View.\cf5\b\i VISIBLE\cf2\b0\i0 );\line     \}\line\line     \cf1\b private void \cf2\b0 signInUI() \{\line         \cf5\b signInButton\cf2\b0 .setVisibility(View.\cf5\b\i VISIBLE\cf2\b0\i0 );\line         \cf5\b tvNotSignedIn\cf2\b0 .setVisibility(View.\cf5\b\i VISIBLE\cf2\b0\i0 );\line         \cf5\b signOutButton\cf2\b0 .setVisibility(View.\cf5\b\i GONE\cf2\b0\i0 );\line         \cf5\b viewContainer\cf2\b0 .setVisibility(View.\cf5\b\i GONE\cf2\b0\i0 );\line     \}\line\line     \cf4\i /**\line      * Fetching user's information name, email, profile pic\line      */\line     \cf1\b\i0 private void \cf2\b0 getProfileInformation() \{\line\line     \}\line\line     \cf3 @Override\line     \cf1\b public void \cf2\b0 onConnectionSuspended(\cf1\b int \cf2\b0 arg0) \{\line         \cf5\b mGoogleApiClient\cf2\b0 .connect();\line         signInUI();\line     \}\line\line\line\line     \cf3 @Override\line     \cf1\b public void \cf2\b0 onClick(View v) \{\line         \cf1\b switch \cf2\b0 (v.getId()) \{\line             \cf1\b case \cf2\b0 R.id.\cf5\b\i sign_in_button\cf2\b0\i0 :\line                 onSignInClicked();\line                 \cf1\b break\cf2\b0 ;\line             \cf1\b case \cf2\b0 R.id.\cf5\b\i sign_out_button\cf2\b0\i0 :\line                 onSignOutClicked();\line                 \cf1\b break\cf2\b0 ;\line         \}\line     \}\line\line\line     \cf1\b private void \cf2\b0 onSignInClicked() \{\line         \cf1\b if \cf2\b0 (!\cf5\b mGoogleApiClient\cf2\b0 .isConnecting()) \{\line             \cf5\b mShouldResolve \cf2\b0 = \cf1\b true\cf2\b0 ;\line             resolveSignInError();\line         \}\line     \}\line\line\line     \cf1\b private void \cf2\b0 onSignOutClicked() \{\line         \cf1\b if \cf2\b0 (\cf5\b mGoogleApiClient\cf2\b0 .isConnected()) \{\line             Plus.\cf5\b\i AccountApi\cf2\b0\i0 .clearDefaultAccount(\cf5\b mGoogleApiClient\cf2\b0 );\line             \cf5\b mGoogleApiClient\cf2\b0 .disconnect();\line             signInUI();\line         \}\line     \}\line\line\line\line\line\line     \cf4\i /**\line      * Background Async task to load user profile picture from url\line      * */\line     \cf1\b\i0 private class \cf2\b0 LoadProfileImage \cf1\b extends \cf2\b0 AsyncTask<String, Void, Bitmap> \{\line         ImageView \cf5\b bmImage\cf2\b0 ;\line\line         \cf1\b public \cf2\b0 LoadProfileImage(ImageView bmImage) \{\line             \cf1\b this\cf2\b0 .\cf5\b bmImage \cf2\b0 = bmImage;\line         \}\line\line         \cf1\b protected \cf2\b0 Bitmap doInBackground(String... urls) \{\line             String urldisplay = urls[\cf6 0\cf2 ];\line             Bitmap mIcon11 = \cf1\b null\cf2\b0 ;\line             \cf1\b try \cf2\b0\{\line                 InputStream in = \cf1\b new \cf2\b0 java.net.URL(urldisplay).openStream();\line                 mIcon11 = BitmapFactory.\i decodeStream\i0 (in);\line             \} \cf1\b catch \cf2\b0 (Exception e) \{\line                 Log.\i e\i0 (\cf7\b "Error"\cf2\b0 , e.getMessage());\line                 e.printStackTrace();\line             \}\line             \cf1\b return \cf2\b0 mIcon11;\line         \}\line\line         \cf1\b protected void \cf2\b0 onPostExecute(Bitmap result) \{\line             \cf5\b bmImage\cf2\b0 .setImageBitmap(result);\line         \}\line     \}\line\}\par
\pard\sa200\sl276\slmult1\cf0\f1\fs22\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
XML FILE \par
       \cf2\f0\fs18  \i <?\cf6\b\i0 xml version=\cf7 "1.0" \cf6 encoding=\cf7 "utf-8"\cf2\b0\i ?>\line\pard\box\brdrdash\brdrw0 \cbpat8\sa200\sl276\slmult1     \i0 <\cf1\b LinearLayout \cf6 xmlns:\cf5 android\cf6 =\cf7 "http://schemas.android.com/apk/res/android"\line         \cf6 xmlns:\cf5 app\cf6 =\cf7 "http://schemas.android.com/apk/res-auto"\line         \cf6 xmlns:\cf5 tools\cf6 =\cf7 "http://schemas.android.com/tools"\line         \cf5 android\cf6 :layout_width=\cf7 "match_parent"\line         \cf5 android\cf6 :layout_height=\cf7 "match_parent"\line         \cf5 android\cf6 :orientation=\cf7 "vertical"\line         \cf5 tools\cf6 :context=\cf7 "com.example.happy.gmailsignin.MainActivity"\cf2\b0 >\line         <\cf1\b LinearLayout\line             \cf5 android\cf6 :id=\cf7 "@+id/text_view_container"\line             \cf5 android\cf6 :layout_width=\cf7 "wrap_content"\line             \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\line             \cf5 android\cf6 :orientation=\cf7 "vertical"\line             \cf5 android\cf6 :paddingLeft=\cf7 "16dp"\line             \cf5 android\cf6 :paddingRight=\cf7 "16dp"\line             \cf5 android\cf6 :visibility=\cf7 "gone"\line             \cf5 android\cf6 :gravity=\cf7 "center"\cf2\b0 >\line\line             <\cf1\b ImageView\line                 \cf5 android\cf6 :id=\cf7 "@+id/imgProfilePic"\line                 \cf5 android\cf6 :layout_width=\cf7 "80dp"\line                 \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\cf2\b0 />\line\line             <\cf1\b TextView\line                 \cf5 android\cf6 :id=\cf7 "@+id/tvName"\line                 \cf5 android\cf6 :layout_width=\cf7 "wrap_content"\line                 \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\line                 \cf5 android\cf6 :padding=\cf7 "5dp"\line                 \cf5 android\cf6 :textSize=\cf7 "20dp" \cf2\b0 />\line\line             <\cf1\b TextView\line                 \cf5 android\cf6 :id=\cf7 "@+id/tvMail"\line                 \cf5 android\cf6 :layout_width=\cf7 "wrap_content"\line                 \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\line                 \cf5 android\cf6 :padding=\cf7 "5dp"\line                 \cf5 android\cf6 :textSize=\cf7 "18dp" \cf2\b0 />\line\line         </\cf1\b LinearLayout\cf2\b0 >\line\line         <\cf1\b Button\line             \cf5 android\cf6 :id=\cf7 "@+id/sign_out_button"\line             \cf5 android\cf6 :layout_width=\cf7 "fill_parent"\line             \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\line             \cf5 android\cf6 :layout_marginBottom=\cf7 "10dp"\line             \cf5 android\cf6 :background=\cf7 "@android:color/holo_red_light"\line             \cf5 android\cf6 :layout_marginLeft=\cf7 "19dp"\line             \cf5 android\cf6 :layout_marginRight=\cf7 "19dp"\line             \cf5 android\cf6 :text=\cf7 "LOGOUT"\line             \cf5 android\cf6 :textColor=\cf7 "#fff"\line             \cf5 android\cf6 :textStyle=\cf7 "bold"\line             \cf5 android\cf6 :visibility=\cf7 "gone" \cf2\b0 />\line\line         <\cf1\b TextView\line             \cf5 android\cf6 :id=\cf7 "@+id/notSignedIn_tv"\line             \cf5 android\cf6 :layout_width=\cf7 "wrap_content"\line             \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\line             \cf5 android\cf6 :layout_gravity=\cf7 "center_horizontal"\line             \cf5 android\cf6 :layout_marginBottom=\cf7 "30dp"\line             \cf5 android\cf6 :text=\cf7 "You are not Signed In"\line             \cf5 android\cf6 :textSize=\cf7 "20sp" \cf2\b0 />\line\line         <\cf1\b com.google.android.gms.common.SignInButton\line             \cf5 android\cf6 :id=\cf7 "@+id/sign_in_button"\line             \cf5 android\cf6 :layout_width=\cf7 "220dp"\line             \cf5 android\cf6 :layout_height=\cf7 "wrap_content"\line             \cf5 android\cf6 :layout_gravity=\cf7 "center_horizontal" \cf2\b0 />\line\line     </\cf1\b LinearLayout\cf2\b0 >\line </\cf1\b LinearLayout\cf2\b0 >\par
\pard\sa200\sl276\slmult1\i\par
}
 